name: Publish NPM package
on:
    push:
        branches:
          - feature/support-multi-network-and-abi
jobs:
  publish-npm-package:
    runs-on: ubuntu-latest
    outputs:
      pkg_version: ${{ steps.set-variables.outputs.pkg_version }}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'
          # Defaults to the user or organization that owns the workflow file
          scope: '@perp'

       # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install package dependencies
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Build contract package
        run: yarn build

      - name: Publish npm package
        run: yarn release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version output/package.json -r'

      - name: set version to variables
        id: set-variables
        run: |
          echo "@perp/v2-sdk  version ${{ steps.version.outputs.value }}"
          echo "::set-output name=pkg_version::${{ steps.version.outputs.value }}"

  # discord-notification-npm-package:
  #   name: Discord Notification for publishing npm package
  #   if: ${{ always() }}
  #   needs: [publish-npm-package]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: issue success notificaiton
  #       if: needs.publish-npm-package.result == 'success'
  #       env:
  #         DISCORD_WEBHOOK: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
  #       uses: Ilshidur/action-discord@master
  #       with:
  #         args: "**[npm package]** @perp/v2-sdk version: **${{ needs.publish-npm-package.outputs.pkg_version }}**  published successfully âœ…"

  #     - name: issue failure notificaiton
  #       if: needs.publish-npm-package.result != 'success'
  #       env:
  #         DISCORD_WEBHOOK: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
  #       uses: Ilshidur/action-discord@master
  #       with:
  #         args: "**[npm package]** @perp/v2-sdk version: **${{ needs.publish-npm-package.outputs.pkg_version }}** failed to publish ðŸ›‘"